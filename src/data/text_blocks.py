# -*- coding: utf-8 -*-
"""Blocos de texto para digitação pelo agente."""
from __future__ import annotations

JAVA_GARANTIA_BLOCKS = [
    (
        "// Classe Garantia \n"
        "public class Garantia \n"
        "{\n"
        "\tprivate int id;\n"
        "\tprivate Cliente cliente;\n"
        "\tprivate Produto produto;\n"
        "\tprivate int prazoMeses;\n"
        "\tprivate String status;\n"
        "\tprivate String dataCadastro;\n"
        "\n"
        "\tpublic Garantia(int id, Cliente cliente, Produto produto, int prazoMeses) \n"
        "\t{\n"
        "\t\tthis.id = id;\n"
        "\t\tthis.cliente = cliente;\n"
        "\t\tthis.produto = produto;\n"
        "\t\tthis.prazoMeses = prazoMeses;\n"
        "\t\tthis.status = \"Ativa\";\n"
        "\t\tthis.dataCadastro = java.time.LocalDate.now().toString();\n"
        "\t}\n"
        "\n"
    ),
    (
        "\tpublic int getId() { return id; }\n"
        "\tpublic Cliente getCliente() { return cliente; }\n"
        "\tpublic Produto getProduto() { return produto; }\n"
        "\tpublic int getPrazoMeses() { return prazoMeses; }\n"
        "\tpublic String getStatus() { return status; }\n"
        "\tpublic String getDataCadastro() { return dataCadastro; }\n"
        "\n"
        "\tpublic void atualizarStatus(String novoStatus) \n"
        "\t{\n"
        "\t\tthis.status = novoStatus;\n"
        "\t}\n"
        "\n"
        "\t@Override\n"
        "\tpublic String toString() \n"
        "\t{\n"
        "\t\treturn \"Garantia [id=\" + id + \", cliente=\" + cliente.getNome() + \", produto=\" + produto.getNome() + \", prazoMeses=\" + prazoMeses + \", status=\" + status + \", dataCadastro=\" + dataCadastro + \"]\";\n"
        "\t}\n"
        "}\n"
        "\n"
        "// Classe Cliente \n"
        "class Cliente \n"
        "{\n"
        "\tprivate int id;\n"
        "\tprivate String nome;\n"
        "\tprivate String documento;\n"
        "\n"
        "\tpublic Cliente(int id, String nome, String documento) \n"
        "\t{\n"
        "\t\tthis.id = id;\n"
        "\t\tthis.nome = nome;\n"
        "\t\tthis.documento = documento;\n"
        "\t}\n"
        "\n"
        "\tpublic int getId() { return id; }\n"
        "\tpublic String getNome() { return nome; }\n"
        "\tpublic String getDocumento() { return documento; }\n"
        "\n"
        "\t@Override\n"
        "\tpublic String toString() \n"
        "\t{\n"
        "\t\treturn \"Cliente [id=\" + id + \", nome=\" + nome + \", documento=\" + documento + \"]\";\n"
        "\t}\n"
        "}\n"
        "\n"
    ),
    (
        "// Classe Produto \n"
        "class Produto \n"
        "{\n"
        "\tprivate int id;\n"
        "\tprivate String nome;\n"
        "\tprivate double valor;\n"
        "\n"
        "\tpublic Produto(int id, String nome, double valor) \n"
        "\t{\n"
        "\t\tthis.id = id;\n"
        "\t\tthis.nome = nome;\n"
        "\t\tthis.valor = valor;\n"
        "\t}\n"
        "\n"
        "\tpublic int getId() { return id; }\n"
        "\tpublic String getNome() { return nome; }\n"
        "\tpublic double getValor() { return valor; }\n"
        "\n"
        "\t@Override\n"
        "\tpublic String toString() \n"
        "\t{\n"
        "\t\treturn \"Produto [id=\" + id + \", nome=\" + nome + \", valor=\" + valor + \"]\";\n"
        "\t}\n"
        "}\n"
        "\n"
        "// Classe CadastroGarantias \n"
        "import java.util.ArrayList;\n"
        "import java.util.List;\n"
        "\n"
        "class CadastroGarantias \n"
        "{\n"
        "\tprivate List<Garantia> garantias = new ArrayList<>();\n"
        "\n"
        "\tpublic void cadastrar(Garantia g) \n"
        "\t{\n"
        "\t\tgarantias.add(g);\n"
        "\t\tSystem.out.println(\"Garantia cadastrada: \" + g);\n"
        "\t}\n"
        "\n"
        "\tpublic void listar() \n"
        "\t{\n"
        "\t\tfor(Garantia g : garantias) \n"
        "\t\t{\n"
        "\t\t\tSystem.out.println(g);\n"
        "\t\t}\n"
        "\t}\n"
        "\n"
        "\tpublic Garantia buscarPorId(int id) \n"
        "\t{\n"
        "\t\tfor(Garantia g : garantias) \n"
        "\t\t{\n"
        "\t\t\tif(g.getId() == id) \n"
        "\t\t\t{\n"
        "\t\t\t\treturn g;\n"
        "\t\t\t}\n"
        "\t\t}\n"
        "\t\treturn null;\n"
        "\t}\n"
        "\n"
        "\tpublic List<Garantia> buscarPorCliente(String nomeCliente) \n"
        "\t{\n"
        "\t\tList<Garantia> resultados = new ArrayList<>();\n"
        "\t\tfor(Garantia g : garantias) \n"
        "\t\t{\n"
        "\t\t\tif(g.getCliente().getNome().equalsIgnoreCase(nomeCliente)) \n"
        "\t\t\t{\n"
        "\t\t\t\tresultados.add(g);\n"
        "\t\t\t}\n"
        "\t\t}\n"
        "\t\treturn resultados;\n"
        "\t}\n"
        "\n"
        "\tpublic void atualizarStatus(int id, String novoStatus) \n"
        "\t{\n"
        "\t\tGarantia g = buscarPorId(id);\n"
        "\t\tif(g != null) \n"
        "\t\t{\n"
        "\t\t\tg.atualizarStatus(novoStatus);\n"
        "\t\t\tSystem.out.println(\"Status atualizado: \" + g);\n"
        "\t\t}\n"
        "\t\telse\n"
        "\t\t{\n"
        "\t\t\tSystem.out.println(\"Garantia não encontrada.\");\n"
        "\t\t}\n"
        "\t}\n"
        "}\n"
        "\n"
    ),
    (
        "// Classe RelatorioGarantias \n"
        "class RelatorioGarantias \n"
        "{\n"
        "\tpublic void gerarRelatorioPorStatus(List<Garantia> garantias, String status) \n"
        "\t{\n"
        "\t\tSystem.out.println(\"Relatório de garantias com status: \" + status);\n"
        "\t\tfor(Garantia g : garantias) \n"
        "\t\t{\n"
        "\t\t\tif(g.getStatus().equalsIgnoreCase(status)) \n"
        "\t\t\t{\n"
        "\t\t\t\tSystem.out.println(g);\n"
        "\t\t\t}\n"
        "\t\t}\n"
        "\t}\n"
        "\n"
        "\tpublic void gerarRelatorioCompleto(List<Garantia> garantias) \n"
        "\t{\n"
        "\t\tSystem.out.println(\"Relatório Completo de Garantias\");\n"
        "\t\tfor(Garantia g : garantias) \n"
        "\t\t{\n"
        "\t\t\tSystem.out.println(g);\n"
        "\t\t}\n"
        "\t}\n"
        "}\n"
        "\n"
        "// Classe principal com simulação \n"
        "public class Main \n"
        "{\n"
        "\tpublic static void main(String[] args) \n"
        "\t{\n"
        "\t\tCadastroGarantias cadastro = new CadastroGarantias();\n"
        "\n"
        "\t\tCliente c1 = new Cliente(1, \"João Silva\", \"123.456.789-00\");\n"
        "\t\tCliente c2 = new Cliente(2, \"Maria Souza\", \"987.654.321-00\");\n"
        "\n"
        "\t\tProduto p1 = new Produto(1, \"Carro Sedan\", 85000.00);\n"
        "\t\tProduto p2 = new Produto(2, \"Trator Agrícola\", 120000.00);\n"
        "\n"
        "\t\tGarantia g1 = new Garantia(1, c1, p1, 12);\n"
        "\t\tGarantia g2 = new Garantia(2, c2, p2, 24);\n"
        "\n"
        "\t\tcadastro.cadastrar(g1);\n"
        "\t\tcadastro.cadastrar(g2);\n"
        "\n"
        "\t\tcadastro.listar();\n"
        "\t\tcadastro.atualizarStatus(1, \"Expirada\");\n"
        "\n"
        "\t\tRelatorioGarantias relatorio = new RelatorioGarantias();\n"
        "\t\trelatorio.gerarRelatorioPorStatus(List.of(g1, g2), \"Expirada\");\n"
        "\t\trelatorio.gerarRelatorioCompleto(List.of(g1, g2));\n"
        "\n"
        "\t\t// Simulação com várias garantias \n"
        "\t\tfor(int i=3; i<=200; i++) \n"
        "\t\t{\n"
        "\t\t\tCliente cliente = new Cliente(i, \"Cliente \" + i, \"000.000.000-\" + i);\n"
        "\t\t\tProduto produto = new Produto(i, \"Produto \" + i, 1000.00 * i);\n"
        "\t\t\tGarantia garantia = new Garantia(i, cliente, produto, (i % 36) + 1);\n"
        "\t\t\tcadastro.cadastrar(garantia);\n"
        "\t\t\tif(i % 5 == 0) \n"
        "\t\t\t{\n"
        "\t\t\t\tcadastro.atualizarStatus(i, \"Expirada\");\n"
        "\t\t\t}\n"
        "\t\t}\n"
        "\n"
        "\t\t// Relatório final \n"
        "\t\trelatorio.gerarRelatorioCompleto(List.of(g1, g2));\n"
        "\t}\n"
        "}\n"
    ),
]

# Blocos em JavaScript usados no ProductW
JS_GARANTIA_BLOCKS = [
    (
        "// Cadastro de Garantias \n"
        "function Garantia(id, cliente, produto, prazoMeses) \n"
        "\t{ \n"
        "\tthis.id = id; \n"
        "this.cliente = cliente; \n"
        "this.produto = produto; \n"
        "this.prazoMeses = prazoMeses; \n"
        "this.dataCadastro = new Date(); \n"
        "this.status = 'Ativa'; \n"
        "} \n\n"
    ),
    (
        "var garantias = []; \n\n"
        "function cadastrarGarantia(id, cliente, produto, prazoMeses) \n"
        "\t{ \n"
        "var novaGarantia = new Garantia(id, cliente, produto, prazoMeses); \n"
        "garantias.push(novaGarantia); \n"
        "console.log('Garantia cadastrada:', novaGarantia); \n"
        "\t} \n\n"
        "function listarGarantias() \n"
        "\t{ \n"
        "\tconsole.log('Lista de Garantias:'); \n"
        "for(var i = 0; i < garantias.length; i++) \n"
        "{ \n"
        "console.log(garantias[i]); \n"
        "} \n"
        "\t} \n\n"
    ),
    (
        "function buscarGarantiaPorCliente(cliente) \n"
        "\t{ \n"
        "var resultados = []; \n"
        "for(var i = 0; i < garantias.length; i++) \n"
        "{ \n"
        "if(garantias[i].cliente === cliente) \n"
        "resultados.push(garantias[i]); \n"
        "} \n"
        "return resultados; \n"
        "\t} \n\n"
        "function atualizarStatusGarantia(id, status) \n"
        "\t{ \n"
        "for(var i = 0; i < garantias.length; i++) \n"
        "{ \n"
        "if(garantias[i].id === id) \n"
        "\t{ \n"
        "\tgarantias[i].status = status; \n"
        "\tconsole.log('Status atualizado:', garantias[i]); \n"
        "} \n"
        "} \n"
        "\t} \n\n"
        "// Funções repetitivas para gerar mais linhas (simulando operações diversas) \n"
        "function simularOperacoes() \n"
        "\t{ \n"
        "for(var i = 0; i < 50; i++) \n"
        "{ \n"
        "cadastrarGarantia(i+100, 'Cliente ' + i, 'Produto ' + i, (i%36)+1); \n"
        "if(i % 2 === 0) \n"
        "atualizarStatusGarantia(i+100, 'Expirada'); \n"
        "} \n"
        "\t} \n\n"
        "simularOperacoes(); \n"
        "listarGarantias(); \n"
    ),
]
